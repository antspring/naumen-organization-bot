from aiogram import Router
from aiogram.filters import Command
from states import UserStates
from repositoreies import UserRepository
from models import Role
from handlers.menu import main_menu_message


router = Router(name=__name__)


@router.message(Command("start"))
async def start_command_handler(message, state):
    await state.set_state(UserStates.registration)
    await message.answer('''üëã –ü—Ä–∏–≤–µ—Ç!  

üìå –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –≤—ã–±–µ—Ä–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è. 
ü§ù–£–∫–∞–∂–∏ —Å–≤–æ–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é. 

üîπ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å:  
‚úîÔ∏è –î–æ—Å—Ç—É–ø –∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é  
‚úîÔ∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã  
‚úîÔ∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏—è—Ö''')


@router.message(UserStates.registration)
async def registration_handler(message, state):
    user = UserRepository.getUserById(message.chat.id)
    if not user:
        user = UserRepository.createUser(message.chat.id, message.text)
    else:
        await message.answer(f'''‚ÑπÔ∏è –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!  

–ü–æ—Ö–æ–∂–µ, –≤—ã —É–∂–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.  

üîπ –í–∞—à —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: {Role.NAMES[user.role.name]}''')
        await main_menu_message(message)

    await state.clear()


@router.message(Command("set_organizator"))
async def set_organizator(message):
    try:
        args = message.text.split()

        if len(args) < 2:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π")
            return

        user_id = int(args[1])
        UserRepository.makeOrganizator(user_id)
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä")
    except:
        await message.answer("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç")


@router.message(Command("set_admin"))
async def set_organizator(message):
    try:
        args = message.text.split()

        if len(args) < 2:
            await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π")
            return

        user_id = int(args[1])
        UserRepository.makeAdmin(user_id)
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ç–µ–ø–µ—Ä—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    except:
        await message.answer("–¢–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç")
